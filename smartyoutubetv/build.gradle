buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
// Put Fabric plugin after Android plugin
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion project.properties.compileSdkVersion
    buildToolsVersion project.properties.buildToolsVersion

    defaultConfig {
        minSdkVersion project.properties.minSdkVersion
        targetSdkVersion project.properties.targetSdkVersion
        applicationId "com.firsthash.smartyoutubetv2"
        versionCode 272
        versionName "6.14.12"
        multiDexEnabled = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        // NOTE: to enable Crashlytics add fabric.properties file with your api keys
        Boolean crashEnabled = file('fabric.properties').exists()

        debug {
            buildConfigField "boolean", "CRASHLYTICS_ENABLED", crashEnabled.toString()
            ext.enableCrashlytics = crashEnabled
        }
        release {
            buildConfigField "boolean", "CRASHLYTICS_ENABLED", crashEnabled.toString()
            ext.enableCrashlytics = crashEnabled

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        orig {
        }
        V720 {
            versionCode 999 // don't auto-update
        }
        V1080 {
            versionCode 999 // don't auto-update
        }
        Vkids {
            applicationIdSuffix ".kids"
        }
        Vlive {
            applicationIdSuffix ".live"
        }
    }

    // naming example: SmartYouTubeTV_Xwalk_v6.8.12_r.apk
    // https://stackoverflow.com/questions/18332474/how-to-set-versionname-in-apk-filename-using-gradle
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "SmartYouTubeTV"
            def flavor = variant.productFlavors[-1].name.capitalize()
            def buildType = variant.variantData.variantConfiguration.buildType.name.take(1)
            def version = variant.versionName

            def newApkName = sprintf("%s_%s_v%s_%s.apk", [project, flavor, version, buildType])

            output.outputFile = new File(output.outputFile.parent, newApkName)
        }
    }

    lintOptions {
        abortOnError true
        disable 'MissingTranslation'
        disable 'NewApi'
    }
}

dependencies {
    androidTestCompile(project.properties.espressoCoreVersion, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile project.properties.junitVersion
    testCompile project.properties.robolectricVersion
    testCompile project.properties.commonsIOVersion

    compile fileTree(dir: 'libs', include: ['*.jar'])

    // uncomment if you want to use embeddable xwalk engine
    // originalFlavorCompile project(path: ':browser', configuration: "liteFlavorDebug")
    // betaFlavorCompile project(path: ':browser', configuration: "fullFlavorDebug")

    // Browser component
    debugCompile project(path: ':browser', configuration: "liteDebug")
    releaseCompile project(path: ':browser', configuration: "liteRelease")

    // Activity for ExoPlayer (taken for demo project)
    debugCompile project(path: ':exoplayeractivity', configuration: "debug")
    releaseCompile project(path: ':exoplayeractivity', configuration: "release")

    // AppUpdateChecker component
    debugCompile project(path: ':appupdatechecker', configuration: "debug")
    releaseCompile project(path: ':appupdatechecker', configuration: "release")

    compile(project.properties.crashlyticsVersion) { // see top part of this file
        transitive = true
    }
    compile project.properties.appCompatVersion
    compile project.properties.androidLoggerVersion
    compile project.properties.constraintLayoutVersion
    compile project.properties.butterKnifeVersion
    annotationProcessor project.properties.butterKnifeCompilerVersion
    compile project.properties.ottoVersion

    compile project.properties.gsonVersion
    compile project.properties.jsonPathVersion

    // view dependencies: gradlew -q smartyoutubetv:dependencies
    // Details: https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.ResolutionStrategy.html
    configurations.all {
        resolutionStrategy {
            force project.properties.asmVersion // resolve 'jsonPath' conflicts
        }
    }

    compile project.properties.nanoHttpdVersion
}
